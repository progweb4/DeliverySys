<?php
// api/repartidor_estado.php

header("Access-Control-Allow-Origin: *");
header("Content-Type: application/json; charset=UTF-8");
header("Access-Control-Allow-Methods: PUT, OPTIONS");
header("Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");

if ($_SERVER['REQUEST_METHOD'] == 'OPTIONS') {
    http_response_code(200);
    exit();
}

require_once 'config.php';
require_once 'database.php';
require_once 'JWTUtils.php';
require_once 'auth_middleware.php';

// El middleware asegura que el usuario esté logueado y devuelve sus datos
$user_data = authenticateAPI();

// Solo se permite a usuarios con rol 'repartidor' o 'admin' usar este endpoint.
if ($user_data['rol'] !== 'repartidor' && $user_data['rol'] !== 'admin') {
     http_response_code(403);
     echo json_encode(['message' => 'No tienes permisos para actualizar estados de repartidor.']);
     exit();
}

try {
    $db = Database::getConnection();
} catch (\Exception $e) {
    http_response_code(500);
    echo json_encode(['message' => 'Error interno del servidor: ' . $e->getMessage()]);
    exit();
}

if ($_SERVER['REQUEST_METHOD'] === 'PUT') {
    $data = json_decode(file_get_contents("php://input"));

    if (empty($data->id_repartidor) || empty($data->estado)) {
        http_response_code(400);
        echo json_encode(['message' => 'Datos incompletos. Se requiere id_repartidor y estado.']);
        exit();
    }

    // Seguridad: Si el rol es 'repartidor', solo puede cambiar su propio estado (si existe ese ID en el token).
    if ($user_data['rol'] === 'repartidor' && (!isset($user_data['id_repartidor']) || $user_data['id_repartidor'] != $data->id_repartidor)) {
        http_response_code(403);
        echo json_encode(['message' => 'No tienes permiso para modificar el estado de otro repartidor.']);
        exit();
    }
    
    $id_repartidor = filter_var($data->id_repartidor, FILTER_VALIDATE_INT);
    $estado = htmlspecialchars(strip_tags($data->estado)); // 'disponible' o 'ocupado'

    if (!in_array($estado, ['disponible', 'ocupado'])) {
        http_response_code(400);
        echo json_encode(['message' => 'Estado de repartidor inválido. Los valores permitidos son: disponible, ocupado.']);
        exit();
    }

    try {
        $query = "UPDATE repartidores SET estado = :estado, ultima_actividad = CURRENT_TIMESTAMP() WHERE id_repartidor = :id_repartidor";
        $stmt = $db->prepare($query);
        $stmt->bindParam(':estado', $estado);
        $stmt->bindParam(':id_repartidor', $id_repartidor, PDO::PARAM_INT);

        if ($stmt->execute() && $stmt->rowCount() > 0) {
            http_response_code(200);
            echo json_encode(['message' => 'Estado de repartidor actualizado a ' . $estado . '.']);
        } else {
            http_response_code(404);
            echo json_encode(['message' => 'Repartidor no encontrado o estado sin cambios.']);
        }

    } catch (PDOException $e) {
        error_log('Error actualizando estado del repartidor: ' . $e->getMessage());
        http_response_code(500);
        echo json_encode(['message' => 'Error interno al actualizar el estado.']);
    }
} else {
    http_response_code(405);
    echo json_encode(['message' => 'Método no permitido.']);
}
